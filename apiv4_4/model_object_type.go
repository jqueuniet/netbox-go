/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.4.4-Docker-3.4.1 (4.4)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiv4_2

import (
	"encoding/json"
	"fmt"
)

// checks if the ObjectType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ObjectType{}

// ObjectType struct for ObjectType
type ObjectType struct {
	Id                   int32    `json:"id"`
	Url                  string   `json:"url"`
	Display              *string  `json:"display,omitempty"`
	AppLabel             string   `json:"app_label"`
	AppName              string   `json:"app_name"`
	Model                string   `json:"model"`
	ModelName            string   `json:"model_name"`
	ModelNamePlural      string   `json:"model_name_plural"`
	Public               bool     `json:"public"`
	Features             []string `json:"features"`
	IsPluginModel        bool     `json:"is_plugin_model"`
	RestApiEndpoint      string   `json:"rest_api_endpoint"`
	Description          string   `json:"description"`
	AdditionalProperties map[string]interface{}
}

type _ObjectType ObjectType

// NewObjectType instantiates a new ObjectType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjectType(id int32, url string, appLabel string, appName string, model string, modelName string, modelNamePlural string, public bool, features []string, isPluginModel bool, restApiEndpoint string, description string) *ObjectType {
	this := ObjectType{}
	this.Id = id
	this.Url = url
	this.AppLabel = appLabel
	this.AppName = appName
	this.Model = model
	this.ModelName = modelName
	this.ModelNamePlural = modelNamePlural
	this.Public = public
	this.Features = features
	this.IsPluginModel = isPluginModel
	this.RestApiEndpoint = restApiEndpoint
	this.Description = description
	return &this
}

// NewObjectTypeWithDefaults instantiates a new ObjectType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjectTypeWithDefaults() *ObjectType {
	this := ObjectType{}
	return &this
}

// GetId returns the Id field value
func (o *ObjectType) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ObjectType) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ObjectType) SetId(v int32) {
	o.Id = v
}

// GetUrl returns the Url field value
func (o *ObjectType) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *ObjectType) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *ObjectType) SetUrl(v string) {
	o.Url = v
}

// GetDisplay returns the Display field value if set, zero value otherwise.
func (o *ObjectType) GetDisplay() string {
	if o == nil || IsNil(o.Display) {
		var ret string
		return ret
	}
	return *o.Display
}

// GetDisplayOk returns a tuple with the Display field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectType) GetDisplayOk() (*string, bool) {
	if o == nil || IsNil(o.Display) {
		return nil, false
	}
	return o.Display, true
}

// HasDisplay returns a boolean if a field has been set.
func (o *ObjectType) HasDisplay() bool {
	if o != nil && !IsNil(o.Display) {
		return true
	}

	return false
}

// SetDisplay gets a reference to the given string and assigns it to the Display field.
func (o *ObjectType) SetDisplay(v string) {
	o.Display = &v
}

// GetAppLabel returns the AppLabel field value
func (o *ObjectType) GetAppLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AppLabel
}

// GetAppLabelOk returns a tuple with the AppLabel field value
// and a boolean to check if the value has been set.
func (o *ObjectType) GetAppLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppLabel, true
}

// SetAppLabel sets field value
func (o *ObjectType) SetAppLabel(v string) {
	o.AppLabel = v
}

// GetAppName returns the AppName field value
func (o *ObjectType) GetAppName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AppName
}

// GetAppNameOk returns a tuple with the AppName field value
// and a boolean to check if the value has been set.
func (o *ObjectType) GetAppNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppName, true
}

// SetAppName sets field value
func (o *ObjectType) SetAppName(v string) {
	o.AppName = v
}

// GetModel returns the Model field value
func (o *ObjectType) GetModel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Model
}

// GetModelOk returns a tuple with the Model field value
// and a boolean to check if the value has been set.
func (o *ObjectType) GetModelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Model, true
}

// SetModel sets field value
func (o *ObjectType) SetModel(v string) {
	o.Model = v
}

// GetModelName returns the ModelName field value
func (o *ObjectType) GetModelName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ModelName
}

// GetModelNameOk returns a tuple with the ModelName field value
// and a boolean to check if the value has been set.
func (o *ObjectType) GetModelNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModelName, true
}

// SetModelName sets field value
func (o *ObjectType) SetModelName(v string) {
	o.ModelName = v
}

// GetModelNamePlural returns the ModelNamePlural field value
func (o *ObjectType) GetModelNamePlural() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ModelNamePlural
}

// GetModelNamePluralOk returns a tuple with the ModelNamePlural field value
// and a boolean to check if the value has been set.
func (o *ObjectType) GetModelNamePluralOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModelNamePlural, true
}

// SetModelNamePlural sets field value
func (o *ObjectType) SetModelNamePlural(v string) {
	o.ModelNamePlural = v
}

// GetPublic returns the Public field value
func (o *ObjectType) GetPublic() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Public
}

// GetPublicOk returns a tuple with the Public field value
// and a boolean to check if the value has been set.
func (o *ObjectType) GetPublicOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Public, true
}

// SetPublic sets field value
func (o *ObjectType) SetPublic(v bool) {
	o.Public = v
}

// GetFeatures returns the Features field value
func (o *ObjectType) GetFeatures() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Features
}

// GetFeaturesOk returns a tuple with the Features field value
// and a boolean to check if the value has been set.
func (o *ObjectType) GetFeaturesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Features, true
}

// SetFeatures sets field value
func (o *ObjectType) SetFeatures(v []string) {
	o.Features = v
}

// GetIsPluginModel returns the IsPluginModel field value
func (o *ObjectType) GetIsPluginModel() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsPluginModel
}

// GetIsPluginModelOk returns a tuple with the IsPluginModel field value
// and a boolean to check if the value has been set.
func (o *ObjectType) GetIsPluginModelOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsPluginModel, true
}

// SetIsPluginModel sets field value
func (o *ObjectType) SetIsPluginModel(v bool) {
	o.IsPluginModel = v
}

// GetRestApiEndpoint returns the RestApiEndpoint field value
func (o *ObjectType) GetRestApiEndpoint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RestApiEndpoint
}

// GetRestApiEndpointOk returns a tuple with the RestApiEndpoint field value
// and a boolean to check if the value has been set.
func (o *ObjectType) GetRestApiEndpointOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RestApiEndpoint, true
}

// SetRestApiEndpoint sets field value
func (o *ObjectType) SetRestApiEndpoint(v string) {
	o.RestApiEndpoint = v
}

// GetDescription returns the Description field value
func (o *ObjectType) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *ObjectType) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *ObjectType) SetDescription(v string) {
	o.Description = v
}

func (o ObjectType) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ObjectType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["url"] = o.Url
	if !IsNil(o.Display) {
		toSerialize["display"] = o.Display
	}
	toSerialize["app_label"] = o.AppLabel
	toSerialize["app_name"] = o.AppName
	toSerialize["model"] = o.Model
	toSerialize["model_name"] = o.ModelName
	toSerialize["model_name_plural"] = o.ModelNamePlural
	toSerialize["public"] = o.Public
	toSerialize["features"] = o.Features
	toSerialize["is_plugin_model"] = o.IsPluginModel
	toSerialize["rest_api_endpoint"] = o.RestApiEndpoint
	toSerialize["description"] = o.Description

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ObjectType) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"url",
		"app_label",
		"app_name",
		"model",
		"model_name",
		"model_name_plural",
		"public",
		"features",
		"is_plugin_model",
		"rest_api_endpoint",
		"description",
	}

	// defaultValueFuncMap captures the default values for required properties.
	// These values are used when required properties are missing from the payload.
	defaultValueFuncMap := map[string]func() interface{}{}
	var defaultValueApplied bool
	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if value, exists := allProperties[requiredProperty]; !exists || value == "" {
			if _, ok := defaultValueFuncMap[requiredProperty]; ok {
				allProperties[requiredProperty] = defaultValueFuncMap[requiredProperty]()
				defaultValueApplied = true
			}
		}
		if value, exists := allProperties[requiredProperty]; !exists || value == "" {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	if defaultValueApplied {
		data, err = json.Marshal(allProperties)
		if err != nil {
			return err
		}
	}
	varObjectType := _ObjectType{}

	err = json.Unmarshal(data, &varObjectType)

	if err != nil {
		return err
	}

	*o = ObjectType(varObjectType)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "url")
		delete(additionalProperties, "display")
		delete(additionalProperties, "app_label")
		delete(additionalProperties, "app_name")
		delete(additionalProperties, "model")
		delete(additionalProperties, "model_name")
		delete(additionalProperties, "model_name_plural")
		delete(additionalProperties, "public")
		delete(additionalProperties, "features")
		delete(additionalProperties, "is_plugin_model")
		delete(additionalProperties, "rest_api_endpoint")
		delete(additionalProperties, "description")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableObjectType struct {
	value *ObjectType
	isSet bool
}

func (v NullableObjectType) Get() *ObjectType {
	return v.value
}

func (v *NullableObjectType) Set(val *ObjectType) {
	v.value = val
	v.isSet = true
}

func (v NullableObjectType) IsSet() bool {
	return v.isSet
}

func (v *NullableObjectType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjectType(val *ObjectType) *NullableObjectType {
	return &NullableObjectType{value: val, isSet: true}
}

func (v NullableObjectType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjectType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
