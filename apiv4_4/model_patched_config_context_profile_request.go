/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.4.4-Docker-3.4.1 (4.4)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiv4_4

import (
	"encoding/json"
)

// checks if the PatchedConfigContextProfileRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchedConfigContextProfileRequest{}

// PatchedConfigContextProfileRequest Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type PatchedConfigContextProfileRequest struct {
	Name        *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	// A JSON schema specifying the structure of the context data for this profile
	Schema               interface{}                            `json:"schema,omitempty"`
	Tags                 []string                               `json:"tags,omitempty"`
	Comments             *string                                `json:"comments,omitempty"`
	DataSource           *ConfigContextProfileRequestDataSource `json:"data_source,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PatchedConfigContextProfileRequest PatchedConfigContextProfileRequest

// NewPatchedConfigContextProfileRequest instantiates a new PatchedConfigContextProfileRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchedConfigContextProfileRequest() *PatchedConfigContextProfileRequest {
	this := PatchedConfigContextProfileRequest{}
	return &this
}

// NewPatchedConfigContextProfileRequestWithDefaults instantiates a new PatchedConfigContextProfileRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchedConfigContextProfileRequestWithDefaults() *PatchedConfigContextProfileRequest {
	this := PatchedConfigContextProfileRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PatchedConfigContextProfileRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedConfigContextProfileRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PatchedConfigContextProfileRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PatchedConfigContextProfileRequest) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PatchedConfigContextProfileRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedConfigContextProfileRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PatchedConfigContextProfileRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PatchedConfigContextProfileRequest) SetDescription(v string) {
	o.Description = &v
}

// GetSchema returns the Schema field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchedConfigContextProfileRequest) GetSchema() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Schema
}

// GetSchemaOk returns a tuple with the Schema field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchedConfigContextProfileRequest) GetSchemaOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Schema) {
		return nil, false
	}
	return &o.Schema, true
}

// HasSchema returns a boolean if a field has been set.
func (o *PatchedConfigContextProfileRequest) HasSchema() bool {
	if o != nil && !IsNil(o.Schema) {
		return true
	}

	return false
}

// SetSchema gets a reference to the given interface{} and assigns it to the Schema field.
func (o *PatchedConfigContextProfileRequest) SetSchema(v interface{}) {
	o.Schema = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *PatchedConfigContextProfileRequest) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedConfigContextProfileRequest) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *PatchedConfigContextProfileRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *PatchedConfigContextProfileRequest) SetTags(v []string) {
	o.Tags = v
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *PatchedConfigContextProfileRequest) GetComments() string {
	if o == nil || IsNil(o.Comments) {
		var ret string
		return ret
	}
	return *o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedConfigContextProfileRequest) GetCommentsOk() (*string, bool) {
	if o == nil || IsNil(o.Comments) {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *PatchedConfigContextProfileRequest) HasComments() bool {
	if o != nil && !IsNil(o.Comments) {
		return true
	}

	return false
}

// SetComments gets a reference to the given string and assigns it to the Comments field.
func (o *PatchedConfigContextProfileRequest) SetComments(v string) {
	o.Comments = &v
}

// GetDataSource returns the DataSource field value if set, zero value otherwise.
func (o *PatchedConfigContextProfileRequest) GetDataSource() ConfigContextProfileRequestDataSource {
	if o == nil || IsNil(o.DataSource) {
		var ret ConfigContextProfileRequestDataSource
		return ret
	}
	return *o.DataSource
}

// GetDataSourceOk returns a tuple with the DataSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchedConfigContextProfileRequest) GetDataSourceOk() (*ConfigContextProfileRequestDataSource, bool) {
	if o == nil || IsNil(o.DataSource) {
		return nil, false
	}
	return o.DataSource, true
}

// HasDataSource returns a boolean if a field has been set.
func (o *PatchedConfigContextProfileRequest) HasDataSource() bool {
	if o != nil && !IsNil(o.DataSource) {
		return true
	}

	return false
}

// SetDataSource gets a reference to the given ConfigContextProfileRequestDataSource and assigns it to the DataSource field.
func (o *PatchedConfigContextProfileRequest) SetDataSource(v ConfigContextProfileRequestDataSource) {
	o.DataSource = &v
}

func (o PatchedConfigContextProfileRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchedConfigContextProfileRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if o.Schema != nil {
		toSerialize["schema"] = o.Schema
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Comments) {
		toSerialize["comments"] = o.Comments
	}
	if !IsNil(o.DataSource) {
		toSerialize["data_source"] = o.DataSource
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PatchedConfigContextProfileRequest) UnmarshalJSON(data []byte) (err error) {
	varPatchedConfigContextProfileRequest := _PatchedConfigContextProfileRequest{}

	err = json.Unmarshal(data, &varPatchedConfigContextProfileRequest)

	if err != nil {
		return err
	}

	*o = PatchedConfigContextProfileRequest(varPatchedConfigContextProfileRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "description")
		delete(additionalProperties, "schema")
		delete(additionalProperties, "tags")
		delete(additionalProperties, "comments")
		delete(additionalProperties, "data_source")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePatchedConfigContextProfileRequest struct {
	value *PatchedConfigContextProfileRequest
	isSet bool
}

func (v NullablePatchedConfigContextProfileRequest) Get() *PatchedConfigContextProfileRequest {
	return v.value
}

func (v *NullablePatchedConfigContextProfileRequest) Set(val *PatchedConfigContextProfileRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchedConfigContextProfileRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchedConfigContextProfileRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchedConfigContextProfileRequest(val *PatchedConfigContextProfileRequest) *NullablePatchedConfigContextProfileRequest {
	return &NullablePatchedConfigContextProfileRequest{value: val, isSet: true}
}

func (v NullablePatchedConfigContextProfileRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchedConfigContextProfileRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
