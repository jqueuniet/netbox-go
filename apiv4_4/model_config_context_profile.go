/*
NetBox REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.4.4-Docker-3.4.1 (4.4)
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apiv4_2

import (
	"encoding/json"
	"fmt"
	"time"
)

// checks if the ConfigContextProfile type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigContextProfile{}

// ConfigContextProfile Extends the built-in ModelSerializer to enforce calling full_clean() on a copy of the associated instance during validation. (DRF does not do this by default; see https://github.com/encode/django-rest-framework/issues/3144)
type ConfigContextProfile struct {
	Id          int32   `json:"id"`
	Url         string  `json:"url"`
	DisplayUrl  *string `json:"display_url,omitempty"`
	Display     *string `json:"display,omitempty"`
	Name        string  `json:"name"`
	Description *string `json:"description,omitempty"`
	// A JSON schema specifying the structure of the context data for this profile
	Schema     interface{}      `json:"schema,omitempty"`
	Tags       []string         `json:"tags,omitempty"`
	Comments   *string          `json:"comments,omitempty"`
	DataSource *BriefDataSource `json:"data_source,omitempty"`
	// Path to remote file (relative to data source root)
	DataPath             string        `json:"data_path"`
	DataFile             BriefDataFile `json:"data_file"`
	DataSynced           NullableTime  `json:"data_synced"`
	Created              NullableTime  `json:"created,omitempty"`
	LastUpdated          NullableTime  `json:"last_updated"`
	AdditionalProperties map[string]interface{}
}

type _ConfigContextProfile ConfigContextProfile

// NewConfigContextProfile instantiates a new ConfigContextProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigContextProfile(id int32, url string, name string, dataPath string, dataFile BriefDataFile, dataSynced NullableTime, lastUpdated NullableTime) *ConfigContextProfile {
	this := ConfigContextProfile{}
	this.Id = id
	this.Url = url
	this.Name = name
	this.DataPath = dataPath
	this.DataFile = dataFile
	this.DataSynced = dataSynced
	this.LastUpdated = lastUpdated
	return &this
}

// NewConfigContextProfileWithDefaults instantiates a new ConfigContextProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigContextProfileWithDefaults() *ConfigContextProfile {
	this := ConfigContextProfile{}
	return &this
}

// GetId returns the Id field value
func (o *ConfigContextProfile) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ConfigContextProfile) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ConfigContextProfile) SetId(v int32) {
	o.Id = v
}

// GetUrl returns the Url field value
func (o *ConfigContextProfile) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *ConfigContextProfile) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *ConfigContextProfile) SetUrl(v string) {
	o.Url = v
}

// GetDisplayUrl returns the DisplayUrl field value if set, zero value otherwise.
func (o *ConfigContextProfile) GetDisplayUrl() string {
	if o == nil || IsNil(o.DisplayUrl) {
		var ret string
		return ret
	}
	return *o.DisplayUrl
}

// GetDisplayUrlOk returns a tuple with the DisplayUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigContextProfile) GetDisplayUrlOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayUrl) {
		return nil, false
	}
	return o.DisplayUrl, true
}

// HasDisplayUrl returns a boolean if a field has been set.
func (o *ConfigContextProfile) HasDisplayUrl() bool {
	if o != nil && !IsNil(o.DisplayUrl) {
		return true
	}

	return false
}

// SetDisplayUrl gets a reference to the given string and assigns it to the DisplayUrl field.
func (o *ConfigContextProfile) SetDisplayUrl(v string) {
	o.DisplayUrl = &v
}

// GetDisplay returns the Display field value if set, zero value otherwise.
func (o *ConfigContextProfile) GetDisplay() string {
	if o == nil || IsNil(o.Display) {
		var ret string
		return ret
	}
	return *o.Display
}

// GetDisplayOk returns a tuple with the Display field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigContextProfile) GetDisplayOk() (*string, bool) {
	if o == nil || IsNil(o.Display) {
		return nil, false
	}
	return o.Display, true
}

// HasDisplay returns a boolean if a field has been set.
func (o *ConfigContextProfile) HasDisplay() bool {
	if o != nil && !IsNil(o.Display) {
		return true
	}

	return false
}

// SetDisplay gets a reference to the given string and assigns it to the Display field.
func (o *ConfigContextProfile) SetDisplay(v string) {
	o.Display = &v
}

// GetName returns the Name field value
func (o *ConfigContextProfile) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ConfigContextProfile) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ConfigContextProfile) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ConfigContextProfile) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigContextProfile) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ConfigContextProfile) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ConfigContextProfile) SetDescription(v string) {
	o.Description = &v
}

// GetSchema returns the Schema field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigContextProfile) GetSchema() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Schema
}

// GetSchemaOk returns a tuple with the Schema field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigContextProfile) GetSchemaOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Schema) {
		return nil, false
	}
	return &o.Schema, true
}

// HasSchema returns a boolean if a field has been set.
func (o *ConfigContextProfile) HasSchema() bool {
	if o != nil && !IsNil(o.Schema) {
		return true
	}

	return false
}

// SetSchema gets a reference to the given interface{} and assigns it to the Schema field.
func (o *ConfigContextProfile) SetSchema(v interface{}) {
	o.Schema = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ConfigContextProfile) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigContextProfile) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ConfigContextProfile) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *ConfigContextProfile) SetTags(v []string) {
	o.Tags = v
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *ConfigContextProfile) GetComments() string {
	if o == nil || IsNil(o.Comments) {
		var ret string
		return ret
	}
	return *o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigContextProfile) GetCommentsOk() (*string, bool) {
	if o == nil || IsNil(o.Comments) {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *ConfigContextProfile) HasComments() bool {
	if o != nil && !IsNil(o.Comments) {
		return true
	}

	return false
}

// SetComments gets a reference to the given string and assigns it to the Comments field.
func (o *ConfigContextProfile) SetComments(v string) {
	o.Comments = &v
}

// GetDataSource returns the DataSource field value if set, zero value otherwise.
func (o *ConfigContextProfile) GetDataSource() BriefDataSource {
	if o == nil || IsNil(o.DataSource) {
		var ret BriefDataSource
		return ret
	}
	return *o.DataSource
}

// GetDataSourceOk returns a tuple with the DataSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigContextProfile) GetDataSourceOk() (*BriefDataSource, bool) {
	if o == nil || IsNil(o.DataSource) {
		return nil, false
	}
	return o.DataSource, true
}

// HasDataSource returns a boolean if a field has been set.
func (o *ConfigContextProfile) HasDataSource() bool {
	if o != nil && !IsNil(o.DataSource) {
		return true
	}

	return false
}

// SetDataSource gets a reference to the given BriefDataSource and assigns it to the DataSource field.
func (o *ConfigContextProfile) SetDataSource(v BriefDataSource) {
	o.DataSource = &v
}

// GetDataPath returns the DataPath field value
func (o *ConfigContextProfile) GetDataPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DataPath
}

// GetDataPathOk returns a tuple with the DataPath field value
// and a boolean to check if the value has been set.
func (o *ConfigContextProfile) GetDataPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DataPath, true
}

// SetDataPath sets field value
func (o *ConfigContextProfile) SetDataPath(v string) {
	o.DataPath = v
}

// GetDataFile returns the DataFile field value
func (o *ConfigContextProfile) GetDataFile() BriefDataFile {
	if o == nil {
		var ret BriefDataFile
		return ret
	}

	return o.DataFile
}

// GetDataFileOk returns a tuple with the DataFile field value
// and a boolean to check if the value has been set.
func (o *ConfigContextProfile) GetDataFileOk() (*BriefDataFile, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DataFile, true
}

// SetDataFile sets field value
func (o *ConfigContextProfile) SetDataFile(v BriefDataFile) {
	o.DataFile = v
}

// GetDataSynced returns the DataSynced field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *ConfigContextProfile) GetDataSynced() time.Time {
	if o == nil || o.DataSynced.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.DataSynced.Get()
}

// GetDataSyncedOk returns a tuple with the DataSynced field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigContextProfile) GetDataSyncedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.DataSynced.Get(), o.DataSynced.IsSet()
}

// SetDataSynced sets field value
func (o *ConfigContextProfile) SetDataSynced(v time.Time) {
	o.DataSynced.Set(&v)
}

// GetCreated returns the Created field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigContextProfile) GetCreated() time.Time {
	if o == nil || IsNil(o.Created.Get()) {
		var ret time.Time
		return ret
	}
	return *o.Created.Get()
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigContextProfile) GetCreatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.Created.Get(), o.Created.IsSet()
}

// HasCreated returns a boolean if a field has been set.
func (o *ConfigContextProfile) HasCreated() bool {
	if o != nil && o.Created.IsSet() {
		return true
	}

	return false
}

// SetCreated gets a reference to the given NullableTime and assigns it to the Created field.
func (o *ConfigContextProfile) SetCreated(v time.Time) {
	o.Created.Set(&v)
}

// SetCreatedNil sets the value for Created to be an explicit nil
func (o *ConfigContextProfile) SetCreatedNil() {
	o.Created.Set(nil)
}

// UnsetCreated ensures that no value is present for Created, not even an explicit nil
func (o *ConfigContextProfile) UnsetCreated() {
	o.Created.Unset()
}

// GetLastUpdated returns the LastUpdated field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *ConfigContextProfile) GetLastUpdated() time.Time {
	if o == nil || o.LastUpdated.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.LastUpdated.Get()
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigContextProfile) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastUpdated.Get(), o.LastUpdated.IsSet()
}

// SetLastUpdated sets field value
func (o *ConfigContextProfile) SetLastUpdated(v time.Time) {
	o.LastUpdated.Set(&v)
}

func (o ConfigContextProfile) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigContextProfile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["url"] = o.Url
	if !IsNil(o.DisplayUrl) {
		toSerialize["display_url"] = o.DisplayUrl
	}
	if !IsNil(o.Display) {
		toSerialize["display"] = o.Display
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if o.Schema != nil {
		toSerialize["schema"] = o.Schema
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Comments) {
		toSerialize["comments"] = o.Comments
	}
	if !IsNil(o.DataSource) {
		toSerialize["data_source"] = o.DataSource
	}
	toSerialize["data_path"] = o.DataPath
	toSerialize["data_file"] = o.DataFile
	toSerialize["data_synced"] = o.DataSynced.Get()
	if o.Created.IsSet() {
		toSerialize["created"] = o.Created.Get()
	}
	toSerialize["last_updated"] = o.LastUpdated.Get()

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ConfigContextProfile) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"url",
		"name",
		"data_path",
		"data_file",
		"data_synced",
		"last_updated",
	}

	// defaultValueFuncMap captures the default values for required properties.
	// These values are used when required properties are missing from the payload.
	defaultValueFuncMap := map[string]func() interface{}{}
	var defaultValueApplied bool
	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if value, exists := allProperties[requiredProperty]; !exists || value == "" {
			if _, ok := defaultValueFuncMap[requiredProperty]; ok {
				allProperties[requiredProperty] = defaultValueFuncMap[requiredProperty]()
				defaultValueApplied = true
			}
		}
		if value, exists := allProperties[requiredProperty]; !exists || value == "" {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	if defaultValueApplied {
		data, err = json.Marshal(allProperties)
		if err != nil {
			return err
		}
	}
	varConfigContextProfile := _ConfigContextProfile{}

	err = json.Unmarshal(data, &varConfigContextProfile)

	if err != nil {
		return err
	}

	*o = ConfigContextProfile(varConfigContextProfile)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "url")
		delete(additionalProperties, "display_url")
		delete(additionalProperties, "display")
		delete(additionalProperties, "name")
		delete(additionalProperties, "description")
		delete(additionalProperties, "schema")
		delete(additionalProperties, "tags")
		delete(additionalProperties, "comments")
		delete(additionalProperties, "data_source")
		delete(additionalProperties, "data_path")
		delete(additionalProperties, "data_file")
		delete(additionalProperties, "data_synced")
		delete(additionalProperties, "created")
		delete(additionalProperties, "last_updated")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableConfigContextProfile struct {
	value *ConfigContextProfile
	isSet bool
}

func (v NullableConfigContextProfile) Get() *ConfigContextProfile {
	return v.value
}

func (v *NullableConfigContextProfile) Set(val *ConfigContextProfile) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigContextProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigContextProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigContextProfile(val *ConfigContextProfile) *NullableConfigContextProfile {
	return &NullableConfigContextProfile{value: val, isSet: true}
}

func (v NullableConfigContextProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigContextProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
